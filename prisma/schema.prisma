// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid()) @db.Uuid()
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  cratedAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order[]

  @@map("users")
}

model Order {
  id         String   @id @default(uuid()) @db.Uuid()
  totalPrice Float
  createdAt  DateTime @default(now()) @map("created_at")

  userId String @map("user_id") @db.Uuid()

  user      User        @relation(fields: [userId], references: [id])
  OrderItem OrderItem[]

  @@map("orders")
}

model Product {
  id          String      @id @default(uuid()) @db.Uuid()
  name        String
  description String
  price       Float
  createdAt   DateTime    @default(now()) @map("created_at")
  OrderItem   OrderItem[]

  @@map("products")
}

model OrderItem {
  id       String @id @default(uuid()) @db.Uuid()
  quantity Int
  price    Float

  productId String @map("product_id") @db.Uuid()
  orderId   String @map("order_id") @db.Uuid()

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
